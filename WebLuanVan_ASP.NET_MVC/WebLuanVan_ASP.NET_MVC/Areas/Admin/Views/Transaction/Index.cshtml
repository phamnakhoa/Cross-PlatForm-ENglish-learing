@model IEnumerable<WebLuanVan_ASP.NET_MVC.Areas.Admin.Models.COrders>
@using WebLuanVan_ASP.NET_MVC.Areas.Admin.Models;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";

    // Filter values
    int? currentPackages = ViewBag.CurrentPackages;
    int? currentPaymentMethods = ViewBag.CurrentPaymentMethods;
    DateOnly? currentDate = ViewBag.CurrentDate;
    string searchTerm = ViewBag.SearchTerm;
    var availableDates = ViewBag.AvailableDates as List<DateOnly>;
    var packages = ViewBag.Packages as List<CPackage>;
    var paymentMethods = ViewBag.PaymentMethods as List<CPaymentMethod>;
    var users = ViewBag.Users as List<CUsers>;
}
@{
    Paginate paginate = new Paginate();
    int pageNo = 0;
    if (ViewBag.Paginate != null)
    {
        paginate = ViewBag.Paginate;
        pageNo = paginate.CurrentPage;
    }
}
<link rel="stylesheet" href="~/AdminTL/assets/css/index.css">

<div class="content-header">
    <h1>Quản lý lịch sử giao dịch</h1>
</div>

<!-- Filter Section -->
<div class="card mb-4 shadow-sm">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0">Bộ lọc giao dịch</h5>
    </div>
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label class="form-label fw-bold">Tìm kiếm</label>
                <input type="text" name="searchTerm" class="form-control"
                       placeholder="Nhập tên hoặc số điện thoại"
                       value="@searchTerm">
            </div>

            <div class="col-md-3">
                <label class="form-label fw-bold">Gói cước</label>
                <select id="packageSelect" name="packageId" class="form-select select2">
                    <option value="">-- Tất cả gói cước --</option>
                    @foreach (var package in packages)
                    {
                        <option value="@package.PackageId" selected="@(currentPackages == package.PackageId)">
                            @package.PackageName
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-3">
                <label class="form-label fw-bold">Ngày tạo</label>
                <select id="dateSelect" name="createdAt" class="form-select select2">
                    <option value="">-- Tất cả ngày --</option>
                    @if (availableDates != null)
                    {
                        @foreach (var date in availableDates)
                        {
                            <option value="@date.ToString("yyyy-MM-dd")" selected="@(currentDate != null && currentDate == date)">
                                @date.ToString("dd/MM/yyyy")
                            </option>
                        }
                    }
                </select>
            </div>

            <div class="col-md-3">
                <label class="form-label fw-bold">Phương thức thanh toán</label>
                <select id="paymentMethodSelect" name="paymentMethod" class="form-select select2">
                    <option value="">-- Tất cả phương thức --</option>
                    @foreach (var paymentMethod in paymentMethods)
                    {
                        <option value="@paymentMethod.PaymentMethodId" selected="@(currentPaymentMethods == paymentMethod.PaymentMethodId)">
                            @paymentMethod.Name
                        </option>
                    }
                </select>
            </div>

            <div class="col-12 mt-3">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="fas fa-filter"></i> Lọc
                </button>
                @if (currentPaymentMethods.HasValue || currentDate != null || currentPackages.HasValue || !string.IsNullOrEmpty(searchTerm))
                {
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-undo"></i> Xóa lọc
                    </a>
                }
            </div>
        </form>
    </div>
</div>

<!-- Content Section -->
<div class="d-flex justify-content-between align-items-center mt-4 mb-3">
    <h2>Lịch sử thanh toán</h2>
    <div>
        <button id="deleteSelected" class="btn btn-danger mr-2" disabled>Xóa đã chọn</button>
    </div>
</div>

<form id="deleteForm" asp-action="DeleteMultiple" method="post">
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-white">
                <tr>
                    <th><input type="checkbox" id="selectAll" /></th>
                    <th>OrderID</th>
                    <th>Tên học viên</th>
                    <th>Số điện thoại</th>
                    <th>Gói cước</th>
                    <th>Ngày mua</th>
                    <th>Trạng thái</th>
                    <th style="text-align:center">Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td><input type="checkbox" name="selectedIds" value="@order.OrderId" class="rowCheckbox" /></td>
                        <td>@order.OrderId</td>
                        <td>
                            @{
                                var name = users.FirstOrDefault(u => u.UserId == order.UserId)?.Fullname;
                            }
                            @(name ?? "Học viên")
                        </td>
                        <td>
                            @{
                                var phone = users.FirstOrDefault(u => u.UserId == order.UserId)?.Phone;
                            }
                            @(phone ?? "Chưa có")
                        </td>
                        <td>
                            @{
                                var packageName = packages.FirstOrDefault(p => p.PackageId == order.PackageId)?.PackageName;
                            }
                            @packageName
                        </td>
                        <td>
                            @order.CreatedAt.ToString("dd/MM/yyyy")
                        </td>
                        <td>
                            <span class="badge @(order.Status == "Completed" ? "bg-success" : order.Status == "Pending" ? "bg-warning" : "bg-danger")">
                                @order.Status
                            </span>
                        </td>
                        <td class="text-center">
                            <a asp-action="xoaTransaction" asp-route-id="@order.OrderId" onclick="confirmDelete(event)"
                               class="btn btn-sm btn-danger">
                                <i class="fas fa-trash"></i> Xóa
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</form>

<partial name="_Paging" model="@paginate" />

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize Select2
            $('.select2').select2({
                placeholder: "Chọn tùy chọn",
                allowClear: true,
                width: '100%'
            });

            // Checkbox handling
            $('#selectAll').change(function () {
                $('.rowCheckbox').prop('checked', $(this).prop('checked'));
                toggleDeleteButton();
            });

            $('.rowCheckbox').change(function () {
                if ($('.rowCheckbox:checked').length === $('.rowCheckbox').length) {
                    $('#selectAll').prop('checked', true);
                } else {
                    $('#selectAll').prop('checked', false);
                }
                toggleDeleteButton();
            });

            function toggleDeleteButton() {
                var checkedCount = $('.rowCheckbox:checked').length;
                $('#deleteSelected').prop('disabled', checkedCount === 0);
                $('#deleteSelected').html(checkedCount > 0
                    ? `<i class="fas fa-trash"></i> Xóa (${checkedCount}) đã chọn`
                    : '<i class="fas fa-trash"></i> Xóa đã chọn');
            }

            // Delete multiple handler
            $('#deleteSelected').click(function (e) {
                e.preventDefault();
                confirmDeleteMultiple(e, function() {
                    $('#deleteForm').submit();
                });
            });
            $('#deletedd').click(function (e) {
                e.preventDefault();
                confirmDeleteMultiple(e,function(){
                      var selectedIds = $('.rowCheckbox:checked').map(function () {
                        return $(this).val();
                    }).get();

                    $.ajax({
                        url: '@Url.Action("DeleteMultiple", "Transaction", new { area = "Admin" })',
                        type: 'POST',
                        data: { selectedIds: selectedIds },
                        success: function (response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert('Xóa không thành công: ' + response.message);
                            }
                        },
                        error: function () {
                            alert('Đã xảy ra lỗi khi xóa.');
                        }
                    });
                })

            });
            // Initialize package select with AJAX
            $('#packageSelect').select2({
                ajax: {
                    url: '@Url.Action("searchPackage", "Transaction")',
                    dataType: 'json',
                    delay: 250,
                    data: function(params) {
                        return {
                            searchTerm: params.term,
                            page: params.page || 1
                        };
                    },
                    processResults: function(data, params) {
                        params.page = params.page || 1;
                        return {
                            results: data.items,
                            pagination: {
                                more: (params.page * 10) < data.totalCount
                            }
                        };
                    },
                    cache: true
                }
            });

            // Initialize payment method select with AJAX
            $('#paymentMethodSelect').select2({
                ajax: {
                    url: '@Url.Action("searchPaymentMethod", "Transaction")',
                    dataType: 'json',
                    delay: 250,
                    data: function(params) {
                        return {
                            searchTerm: params.term,
                            page: params.page || 1
                        };
                    },
                    processResults: function(data, params) {
                        params.page = params.page || 1;
                        return {
                            results: data.items,
                            pagination: {
                                more: (params.page * 10) < data.totalCount
                            }
                        };
                    },
                    cache: true
                }
            });
        });
    </script>
}